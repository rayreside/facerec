{"version":3,"sources":["components/SignIn/SignIn.js","components/Register/Register.js","components/Navigation/Logo.js","components/Navigation/Navigation.js","components/ImageCount/ImageCount.js","components/ImageURL/ImageURL.js","components/ImageContainer/ImageContainer.js","components/Footer/Footer.js","dark-mode/theme.js","dark-mode/global.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmit","preventDefault","fetch","method","mode","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","props","logUser","onRouteChange","console","log","catch","err","this","className","type","name","placeholder","onChange","onClick","React","Component","Register","onNameChange","onConfPasswordChange","confPassword","required","Logo","toggleTheme","theme","src","alt","Navigation","isSignedIn","style","outline","ImageCount","entries","ImageURL","onInputChange","onImgSubmit","ImageContainer","imageUrl","recBox","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Footer","lightTheme","text","btn","darkTheme","GlobalStyles","createGlobalStyle","particlesOptions","initialState","input","route","currentUser","joined","App","calculateFaceLocation","data","claFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","left_col","top_row","right_col","bottom_row","displayFaceRec","count","prevState","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.15ecd2d5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SignIn.css';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value});\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value});\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('https://afternoon-springs-61219.herokuapp.com/signin', {\r\n            method: 'post',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.logUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n            else console.log('Wrong credentials.');\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return(\r\n            <div className='signForm w-40-l w-60-m w-100'>\r\n                <div className=\"signBar br3-ns br--top-ns pv3\"></div>\r\n                <form onSubmit={this.onSubmit} className=\"flannel flex flex-column items-center signForm-inner br3-ns br--bottom-ns ph4-ns pv3 w-100\">\r\n                    <fieldset id=\"sign_up\" className=\"b--transparent w-100\">\r\n                        <input \r\n                            className=\"b pa2 br2 input-reset bn w-100 mb2\" \r\n                            type=\"email\" \r\n                            name=\"email-address\" \r\n                            placeholder='Email'  \r\n                            id=\"email-address\"\r\n                            onChange = {this.onEmailChange}\r\n                        />\r\n                        <input \r\n                            className=\"b pa2 br2 input-reset bn w-100 mb2\" \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder='Password'  \r\n                            id=\"password\"\r\n                            onChange = {this.onPasswordChange}\r\n                        />\r\n                    </fieldset>\r\n                    <input \r\n                        className=\"btnImg bg-animate b br2 ph3 pv2 input-reset ba bw1 b--near-white pointer f4 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Sign in\" />\r\n                    <p onClick={() => onRouteChange('Register')} \r\n                        className=\"yBG ph2 dib f5-ns f6 b pointer\">Don't have an account? Sign up</p>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport './Register.css';\r\n\r\nclass Register extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confPassword: ''\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n    onConfPasswordChange = (event) => {\r\n        this.setState({confPassword: event.target.value});\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        const { name, email, password, confPassword } = this.state;\r\n        event.preventDefault();\r\n        if (password === confPassword) {\r\n            fetch('https://afternoon-springs-61219.herokuapp.com/register', {\r\n                method: 'post',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ name, email, password })\r\n            })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (typeof user.id !== 'undefined') {\r\n                    this.props.logUser(user);\r\n                    this.props.onRouteChange('home');\r\n                } else console.log('Please fill out the fields properly.');\r\n            })\r\n            .catch(err => console.log(err))\r\n        } else console.log('Passwords do not match.');\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return(\r\n            <div className='regForm w-40-l w-60-m w-100'>\r\n                <div className=\"regBar br3-ns br--top-ns pv3\"></div>\r\n                <form onSubmit={this.onSubmit} className=\"flannel flex flex-column items-center regForm-inner br3-ns br--bottom-ns ph4-ns pv3 w-100\">\r\n                    <fieldset id=\"register\" className=\"b--transparent w-100\">\r\n                        <input \r\n                            className=\"b pa2 br2 input-reset bn w-100 mb2\" \r\n                            type=\"text\" \r\n                            name=\"name\" \r\n                            placeholder='Name' \r\n                            id=\"name\"\r\n                            onChange = {this.onNameChange} \r\n                            required />\r\n                        <input \r\n                            className=\"b pa2 br2 input-reset bn w-100 mb2\" \r\n                            type=\"email\" \r\n                            name=\"email-address\" \r\n                            placeholder='Email' \r\n                            id=\"email-address\" \r\n                            onChange = {this.onEmailChange} \r\n                            required />\r\n                        <input \r\n                            className=\"b pa2 br2 input-reset bn w-100 mb2\" \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder='Password' \r\n                            id=\"password\"\r\n                            onChange = {this.onPasswordChange} \r\n                            required />\r\n                        <input \r\n                            className=\"b pa2 br2 input-reset bn w-100 mb2\" \r\n                            type=\"password\" \r\n                            name=\"confpassword\" \r\n                            placeholder='Confirm Password' \r\n                            id=\"confpassword\" \r\n                            onChange = {this.onConfPasswordChange} \r\n                            required />\r\n                    </fieldset>\r\n                    <input \r\n                        className=\"btnImg bg-animate b br2 ph3 pv2 input-reset ba bw1 b--near-white pointer f4 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Register\" />\r\n                    <p onClick={() =>onRouteChange('SignIn')} \r\n                    className=\"yBG ph2 dib f5-ns f6 b pointer\">Already have an account? Sign in</p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nconst Logo = ({ toggleTheme, theme }) => {\r\n    return (\r\n        <div className='pointer pl2 flex items-center'>\r\n            <img src='https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/160/microsoft/209/banana_1f34c.png' alt='logo' className=\"dib w2 h2 pa1\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Navigation.css';\r\nimport Logo from './Logo.js';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn, toggleTheme, theme }) => {\r\n    return (\r\n        <header className=\"fixed w-100 h3 ph3\">\r\n            <nav className=\"flex justify-between h-100 tracked\">\r\n                <Logo toggleTheme={toggleTheme} theme={theme} />\r\n                <div className='flex-grow pl3 flex items-center'>\r\n                    { isSignedIn &&\r\n                        <p onClick={() =>onRouteChange('SignOut')} \r\n                            className=\"dim b f5 pa2 bg-animate pointer br3\">Sign Out</p>\r\n                    }\r\n                    <button onClick={toggleTheme} id='btnToggle'  \r\n                    className=\"b bn pa3 mh2 pointer br-100\"\r\n                    style={{outline: 0}}></button>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './ImageCount.css';\r\n\r\nconst ImageCount = ({ name, entries }) => {\r\n    return(\r\n        <div>\r\n            <div className='f3'>\r\n                <p className='yBG ma0 ph3'>{`${name}, your current entry count is: `}</p>\r\n            </div>\r\n            <div className='round white f1 mv2'>\r\n                <div className='round-inner'>\r\n                    {`#${entries}`}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageCount;","import React from 'react';\r\n\r\nconst ImageURL = ({ onInputChange, onImgSubmit }) => {\r\n    return(\r\n        <div className='flex flex-column pt4 items-center w-100'>\r\n            <div className='flannel pv3 br3-ns w-60-l w-80-m w-100'>\r\n                <input className='f4 bt bb bl bw1 b--near-white pa3 w-70 br3 br--left' type='text' placeholder='Paste Image URL' onChange={onInputChange}/>\r\n                <button className='f4 bt bb br bw1 b--near-white pv3 w-20 br3 br--right btnImg pointer'\r\n                onClick={onImgSubmit}>Go</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageURL;","import React from 'react';\r\nimport './ImageContainer.css';\r\n\r\nconst ImageContainer= ({ imageUrl, recBox }) => {\r\n    return(\r\n        <div className='mt4 max-w-xl mx-auto flex justify-center'>\r\n            <div className='relative inline-block'>\r\n                <img className='br3-ns' id='faceRecImg' alt='' src={imageUrl} />\r\n                <div className='absolute bounding-box br2' style={{top: recBox.topRow, right: recBox.rightCol, bottom: recBox.bottomRow, left: recBox.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageContainer;","import React from 'react';\r\n\r\nconst Footer= () => {\r\n    return (\r\n        <footer className='pv4'>\r\n            <small className=\"f6 db tc\">© 2020 <b className=\"ttu\">NOT AN ACTUAL COMPANY Inc</b>.</small>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","export const lightTheme = {\r\n    body: '#fdf9f3',\r\n    // img: `url('https://archive-media-1.nyafuu.org/vp/image/1478/22/1478225810507.png')`,\r\n    text: '#212121',\r\n    btn: '#ffd866'\r\n  }\r\n  \r\n  export const darkTheme = {\r\n    body: '#212121',\r\n    // img: `url('https://wallpaperaccess.com/full/882411.jpg')`,\r\n    text: '#f1ede9',\r\n    btn: '#f1ede9'\r\n  }","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    ${'' /* background-image: ${({ theme }) => theme.img}; */}\r\n    ${'' /* background-position: center;\r\n    background-size: auto 100%;\r\n    background-repeat: no-repeat; */}\r\n    color: ${({ theme }) => theme.text};\r\n    -webkit-transition: all 0.25s linear;\r\n    transition: all 0.25s linear;\r\n  }\r\n  \r\n  #btnToggle {\r\n    background: ${({ theme }) => theme.btn};\r\n    transition: all 0.25s linear;\r\n  }\r\n  `","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Register from './components/Register/Register';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport ImageCount from './components/ImageCount/ImageCount';\r\nimport ImageURL from './components/ImageURL/ImageURL';\r\nimport ImageContainer from './components/ImageContainer/ImageContainer';\r\nimport Footer from './components/Footer/Footer';\r\nimport Particles from 'react-particles-js';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme } from './dark-mode/theme';\r\nimport { GlobalStyles } from './dark-mode/global';\r\n\r\nconst particlesOptions = {\r\n  \"particles\": {\r\n    \"number\": {\r\n      \"value\": 50,\r\n      \"density\": {\r\n        \"enable\": true,\r\n        \"value_area\": 800\r\n      }\r\n    },\r\n    \"color\": {\r\n      \"value\": \"#fff\"\r\n    },\r\n    \"shape\": {\r\n      \"type\": \"circle\"\r\n    },\r\n    \"opacity\": {\r\n      \"value\": 0.2,\r\n      \"random\": true,\r\n      \"anim\": {\r\n        \"enable\": false\r\n      }\r\n    },\r\n    \"size\": {\r\n      \"value\": 10,\r\n      \"random\": true,\r\n      \"anim\": {\r\n        \"enable\": false,\r\n        \"speed\": 40,\r\n        \"size_min\": 0.1,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"line_linked\": {\r\n      \"enable\": false,\r\n      \"distance\": 500,\r\n      \"color\": \"#ffffff\",\r\n      \"opacity\": 0.4,\r\n      \"width\": 2\r\n    },\r\n    \"move\": {\r\n      \"enable\": true,\r\n      \"speed\": 3,\r\n      \"direction\": \"bottom\",\r\n      \"random\": false,\r\n      \"straight\": false,\r\n      \"out_mode\": \"out\",\r\n      \"bounce\": false,\r\n      \"attract\": {\r\n        \"enable\": false,\r\n        \"rotateX\": 600,\r\n        \"rotateY\": 1200\r\n      }\r\n    }\r\n  },\r\n  \"retina_detect\": true\r\n}\r\n\r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  recBox: {},\r\n  route: 'SignIn',\r\n  isSignedIn: false,\r\n  theme: 'Light',\r\n  currentUser: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      imageUrl: '',\r\n      recBox: {},\r\n      route: 'SignIn',\r\n      isSignedIn: false,\r\n      theme: 'Light',\r\n      currentUser: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        entries: 0,\r\n        joined: ''\r\n      }\r\n    }\r\n  }\r\n  \r\n  calculateFaceLocation = (data) => {\r\n    const claFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('faceRecImg');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: claFace.left_col * width,\r\n      topRow: claFace.top_row * width,\r\n      rightCol: width - (claFace.right_col * width),\r\n      bottomRow: height - (claFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  // The function that toggles between themes\r\n  toggleTheme = () => {\r\n    // if the theme is not light, then set it to dark\r\n    if (this.state.theme === 'Light') {\r\n      this.setState({theme: 'Night'});\r\n    // otherwise, it should be light\r\n    } else {\r\n      this.setState({theme: 'Light'});\r\n    }\r\n  }\r\n\r\n  displayFaceRec = (recBox) => {\r\n    this.setState({recBox: recBox});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  onImgSubmit = () => {\r\n    this.setState({imageUrl: this.state.input});\r\n    fetch('https://afternoon-springs-61219.herokuapp.com/imageurl', {\r\n      method: 'post',\r\n      mode: 'cors',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n          input: this.state.input\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      if (response) {\r\n        fetch('https://afternoon-springs-61219.herokuapp.com/image', {\r\n          method: 'put',\r\n          mode: 'cors',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n              id: this.state.currentUser.id\r\n          })\r\n        })\r\n        .then(response => response.json())\r\n        .then(count => {\r\n          this.setState(prevState => ({\r\n            currentUser: {\r\n              ...prevState.currentUser, //spread operator used to update one key in object\r\n              entries: count\r\n            }\r\n        }))\r\n        })\r\n        .catch(err => console.log(err))\r\n      }\r\n      this.displayFaceRec(this.calculateFaceLocation(response))\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if(route === 'SignOut') {\r\n      this.setState(initialState);\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true});\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  logUser = (user) => {\r\n    this.setState({currentUser: {\r\n      id: user.id,\r\n      name: user.name,\r\n      email: user.email,\r\n      entries: user.entries,\r\n      joined: user.joined\r\n    }})\r\n  }\r\n\r\n  render() {\r\n    const {isSignedIn, imageUrl, route, recBox, theme, currentUser} = this.state;\r\n    return (\r\n      <ThemeProvider theme={theme === 'Light' ? lightTheme : darkTheme}>\r\n        <GlobalStyles />\r\n        <Particles className='particles' params={particlesOptions}/>\r\n        <Navigation toggleTheme={this.toggleTheme} theme={theme} isSignedIn={isSignedIn} route={route} onRouteChange={this.onRouteChange} />\r\n        <div className='pt6 w-100'>\r\n          { route ==='home' ?\r\n            <div className='flex flex-column items-center w-100'>\r\n              <ImageCount name={currentUser.name} entries={currentUser.entries} />\r\n              <ImageURL onInputChange={this.onInputChange} onImgSubmit={this.onImgSubmit}/>\r\n              <ImageContainer recBox={recBox} imageUrl={imageUrl} />\r\n              <Footer/>\r\n            </div>\r\n            : (\r\n              route === 'SignIn' || route === 'SignOut' ? \r\n              <div className='flex flex-column items-center w-100'>\r\n                <SignIn onRouteChange = {this.onRouteChange} logUser = {this.logUser}/>\r\n                <Footer/>\r\n              </div>\r\n              :\r\n              <div className='flex flex-column items-center w-100'>\r\n                <Register onRouteChange = {this.onRouteChange} logUser = {this.logUser}/>\r\n                <Footer/>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}