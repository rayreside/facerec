{"version":3,"sources":["components/SignIn/SignIn.js","components/Register/Register.js","components/Navigation/Logo/Logo.js","components/Navigation/Navigation.js","components/Rank/Rank.js","components/Image/Image.js","components/FaceRec/FaceRec.js","dark-mode/theme.js","dark-mode/global.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","onRouteChange","className","id","htmlFor","type","name","onClick","value","Register","Logo","toggleTheme","theme","src","alt","Navigation","route","isSignedIn","Rank","Image","onInputChange","onButtonSubmit","onChange","FaceRec","imageUrl","recBox","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","lightTheme","body","text","btn","darkTheme","GlobalStyles","createGlobalStyle","app","Clarifai","App","apiKey","particlesOptions","calculateFaceLocation","data","claFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","left_col","top_row","right_col","bottom_row","state","setState","displayFaceRec","event","input","target","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f278aeb2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SignIn.css';\r\n\r\nconst SignIn= ({ onRouteChange }) => {\r\n    return(\r\n        <div className='signForm w-30-l w-90'>\r\n            <article className=\"flannel br3 w-100\">\r\n                <h1 className=\"f3 black br3-ns br--top-ns mv0 pv3\">Sign In</h1>\r\n                <main className=\"pa4 w-100 black-80\">\r\n                    <div className=\"signForm-inner br3 pa3 w-100\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 br2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b br2 pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                        </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                        <input \r\n                            onClick={() =>onRouteChange('home')} \r\n                            className=\"btnImg bg-animate b br2 ph3 pv2 input-reset ba pointer f5 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Sign in\" />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                        <p \r\n                            onClick={() =>onRouteChange('Register')} \r\n                            className=\"f6 link dim black db pointer\">Don't have an account? Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport './Register.css';\r\n\r\nconst Register= ({ onRouteChange }) => {\r\n    return(\r\n        <div className='regForm w-30-l w-90'>\r\n            <article className=\"flannel br3 w-100\">\r\n                <h1 className=\"f3 black br3 br--top-ns mv0 pv3\">Register</h1>\r\n                <main className=\"pa4 w-100 black-80\">\r\n                    <div className=\"regForm-inner br3 pa3 w-100\">\r\n                        <fieldset id=\"register\" className=\"ba b--transparent ph0 mh0\">\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\r\n                            <input className=\"pa2 br2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 br2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b br2 pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Confirm Password</label>\r\n                            <input className=\"b br2 pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"confpassword\"  id=\"confpassword\" />\r\n                        </div>\r\n                        </fieldset>\r\n                        <div className='mv2'>\r\n                            <input \r\n                                onClick={() =>onRouteChange('SignIn')} \r\n                                className=\"btnImg bg-animate b br2 ph3 pv2 input-reset ba pointer f5 dib\" \r\n                                type=\"submit\" \r\n                                value=\"Register\" />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './Logo.css';\r\n\r\nconst Logo = ({ toggleTheme, theme }) => {\r\n    return (\r\n        <div className='pointer pa3 flex items-center'>\r\n            <img src='https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/160/microsoft/209/banana_1f34c.png' alt='logo' className=\"dib w2 h2 pa1\" />\r\n            <p onClick={toggleTheme} id='btnToggle'  \r\n            className=\"btnImg b f5 pa2 mh2 bg-animate pointer br3\">{theme}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Navigation.css';\r\nimport Logo from './Logo/Logo.js';\r\n\r\nconst Navigation = ({ onRouteChange, route, isSignedIn, toggleTheme, theme }) => {\r\n    return (\r\n        <header className=\"fixed w-100 h3 ph3\">\r\n            <nav className=\"flex justify-between h-100 tracked\">\r\n                <Logo toggleTheme={toggleTheme} theme={theme} />\r\n                { isSignedIn ?\r\n                <div className='flex-grow ph3 flex items-center'>\r\n                    <p onClick={() =>onRouteChange('SignOut')} \r\n                    className=\"btnImg b f5 pa2 bg-animate pointer br3\">Sign Out</p>\r\n                </div>\r\n                :\r\n                ( route === 'SignIn' || route === 'SignOut' ?\r\n                <div className='flex-grow ph3 flex items-center'>\r\n                    <p onClick={() =>onRouteChange('Register')} \r\n                    className=\"btnImg b f5 pa2 bg-animate pointer br3\">Register</p>\r\n                </div>\r\n                :\r\n                <div className='flex-grow ph3 flex items-center'>\r\n                    <p onClick={() =>onRouteChange('SignIn')} \r\n                    className=\"btnImg b f5 pa2 bg-animate pointer br3\">Sign In</p>\r\n                </div>\r\n                )}\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './Rank.css';\r\n\r\nconst Rank = () => {\r\n    return(\r\n        <div>\r\n            <div className='f3'>\r\n                <p className='yBG ma0 ph3'>{'Ray, your current rank is: '}</p>\r\n            </div>\r\n            <div className='round white f1 mv2'>\r\n                <div className='round-inner'>\r\n                    {'#5'}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './Image.css';\r\n\r\nconst Image = ({ onInputChange, onButtonSubmit }) => {\r\n    return(\r\n        <div>\r\n            <div>\r\n                <p className='yBG f3 ph3'>\r\n                    {'Paste Image URL:'}\r\n                    {/* [画像の URL を貼り付け] */}\r\n                </p>\r\n            </div>\r\n            <div className='flex justify-center br3-ns'>\r\n                <div className='flannel flex justify-center w-50-l w-100 pv3 br3'>\r\n                    <input className='f4 bn pa3 w-60 br2-ns br--left-ns' type='tex' onChange={onInputChange}/>\r\n                    <button className='btnImg f4 pv3 ba bw1 bg-animate pointer w-20 br2-ns br--right-ns'\r\n                    onClick={onButtonSubmit}>Go</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image;","import React from 'react';\r\nimport './FaceRec.css';\r\n\r\nconst FaceRec= ({ imageUrl, recBox }) => {\r\n    return(\r\n        <div className='imgContainer flex justify-center mv3 w-100'>\r\n            <div className='absolute'>\r\n                <img className='br3' id='faceRecImg' alt='' src={imageUrl} />\r\n                <div className='bounding-box br3' style={{top: recBox.topRow, right: recBox.rightCol, bottom: recBox.bottomRow, left: recBox.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRec;","export const lightTheme = {\r\n    body: '#fdf9f3',\r\n    text: '#212121',\r\n    btn: '#ffd866'\r\n  }\r\n  \r\n  export const darkTheme = {\r\n    body: '#212121',\r\n    text: '#f1ede9',\r\n    btn: '#ab9df2'\r\n  }","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.25s linear;\r\n  }\r\n  \r\n  #btnToggle {\r\n    background: ${({ theme }) => theme.btn};\r\n  }\r\n  `","import React, { Component } from 'react';\r\nimport Clarifai from 'clarifai';\r\nimport './App.css';\r\nimport SignIn from './components/SignIn/SignIn.js';\r\nimport Register from './components/Register/Register.js';\r\nimport Navigation from './components/Navigation/Navigation.js';\r\nimport Rank from './components/Rank/Rank.js';\r\nimport Image from './components/Image/Image.js';\r\nimport FaceRec from './components/FaceRec/FaceRec.js';\r\n// import Footer from './components/Footer/Footer.js';\r\nimport Particles from 'react-particles-js';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme } from './dark-mode/theme.js';\r\nimport { GlobalStyles } from './dark-mode/global.js';\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: '4536246d27b942f4bc39353b2773a750'\r\n });\r\n\r\nconst particlesOptions = {\r\n  \"particles\": {\r\n    \"number\": {\r\n      \"value\": 50,\r\n      \"density\": {\r\n        \"enable\": true,\r\n        \"value_area\": 800\r\n      }\r\n    },\r\n    \"color\": {\r\n      \"value\": \"#fff\"\r\n    },\r\n    \"shape\": {\r\n      \"type\": \"circle\"\r\n    },\r\n    \"opacity\": {\r\n      \"value\": 0.2,\r\n      \"random\": true,\r\n      \"anim\": {\r\n        \"enable\": false\r\n      }\r\n    },\r\n    \"size\": {\r\n      \"value\": 10,\r\n      \"random\": true,\r\n      \"anim\": {\r\n        \"enable\": false,\r\n        \"speed\": 40,\r\n        \"size_min\": 0.1,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"line_linked\": {\r\n      \"enable\": false,\r\n      \"distance\": 500,\r\n      \"color\": \"#ffffff\",\r\n      \"opacity\": 0.4,\r\n      \"width\": 2\r\n    },\r\n    \"move\": {\r\n      \"enable\": true,\r\n      \"speed\": 3,\r\n      \"direction\": \"bottom\",\r\n      \"random\": false,\r\n      \"straight\": false,\r\n      \"out_mode\": \"out\",\r\n      \"bounce\": false,\r\n      \"attract\": {\r\n        \"enable\": false,\r\n        \"rotateX\": 600,\r\n        \"rotateY\": 1200\r\n      }\r\n    }\r\n  },\r\n  \"retina_detect\": true\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      imageUrl: '',\r\n      recBox: {},\r\n      route: 'SignIn',\r\n      isSignedIn: false,\r\n      theme: 'Light'\r\n    }\r\n  }\r\n  \r\n  calculateFaceLocation = (data) => {\r\n    const claFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('faceRecImg');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: claFace.left_col * width,\r\n      topRow: claFace.top_row * width,\r\n      rightCol: width - (claFace.right_col * width),\r\n      bottomRow: height - (claFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  // The function that toggles between themes\r\n  toggleTheme = () => {\r\n    // if the theme is not light, then set it to dark\r\n    if (this.state.theme === 'Light') {\r\n      this.setState({theme: 'Night'});\r\n    // otherwise, it should be light\r\n    } else {\r\n      this.setState({theme: 'Light'});\r\n    }\r\n  }\r\n\r\n  displayFaceRec = (recBox) => {\r\n    this.setState({recBox: recBox});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({imageUrl: this.state.input});\r\n    app.models.predict(\r\n      Clarifai.FACE_DETECT_MODEL, \r\n      this.state.input)\r\n    .then(response => this.displayFaceRec(this.calculateFaceLocation(response)))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if(route === 'SignOut') {\r\n      this.setState({isSignedIn: false})\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  render() {\r\n    const {isSignedIn, imageUrl, route, recBox, theme} = this.state;\r\n    return (\r\n      <ThemeProvider theme={theme === 'Light' ? lightTheme : darkTheme}>\r\n        <GlobalStyles />\r\n        <div className=\"App\" id=\"particles-js\">\r\n          <Particles className='particles' params={particlesOptions}/>\r\n          {/* <img id='lower-left' className='h4' src='https://thumbs.gfycat.com/MistySeriousAmbushbug-max-1mb.gif' /> */}\r\n          <Navigation toggleTheme={this.toggleTheme} theme={theme} isSignedIn={isSignedIn} route={route} onRouteChange={this.onRouteChange} />\r\n          <div className='flex justify-center pv6 w-100'>\r\n            { route ==='home' ?\r\n              <div className='flex flex-column justify-center w-100'>\r\n                <Rank />\r\n                <Image onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\r\n                <FaceRec recBox={recBox} imageUrl={imageUrl} />\r\n              </div>\r\n              : (\r\n                route === 'SignIn' || route === 'SignOut' ?\r\n                <SignIn onRouteChange = {this.onRouteChange}/>\r\n                :\r\n                <Register onRouteChange = {this.onRouteChange}/>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}